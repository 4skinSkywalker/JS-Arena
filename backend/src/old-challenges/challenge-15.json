{
  "description": "### SymbolsPermutation\n\nThe task is to determine if it is possible to rearrange characters of a string 'word1' to obtain another string 'word2'. To solve this, the function 'symbolsPermutation' accepts two strings, sorts them alphabetically and then compares them. If they are equal, it returns true, otherwise false.\n\nInput: Two strings, 'word1' and 'word2'. (1 ≤ word1.length ≤ 10^2, 1 ≤ word2.length ≤ 10^2)\nOutput: Returns 'true' if it is possible to rearrange characters of 'word1' to get 'word2', otherwise it returns 'false'.\n\nExample:\n\n``` symbolsPermutation('abc', 'cab') // true ```",
  "tests": [
    {
      "input": {
        "word1": "abc",
        "word2": "cab"
      },
      "expectedOutput": true
    },
    {
      "input": {
        "word1": "aaaa",
        "word2": "aaa"
      },
      "expectedOutput": false
    },
    {
      "input": {
        "word1": "sutr",
        "word2": "cybk"
      },
      "expectedOutput": false
    },
    {
      "input": {
        "word1": "kscsa",
        "word2": "ncwxt"
      },
      "expectedOutput": false
    },
    {
      "input": {
        "word1": "imazpsni",
        "word2": "kbyafemd"
      },
      "expectedOutput": false
    }
  ]
}