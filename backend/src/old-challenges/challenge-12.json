{
  "description": "### TraverseTree\n\nYou are given a binary tree as input. Your task is to traverse the binary tree and return an array of integers representing the values of each node in the order you visited them.\n\nInput: An object representing the binary tree where node has a `value`, `left`, and `right` properties.\nOutput: An array of integers representing the values of each node in the order you visited them.\n\nExample:\n\n``` traverseTree({'value': 1,'left': {'value': 2,'left': null, 'right': {'value': 3,'left': null, 'right': null}}, 'right': {'value': 4,'left': {'value': 5,'left': null, 'right': null}, 'right': null}}) // [1, 2, 4, 3, 5] ```",
  "tests": [
    {
      "input": {"value": 1,"left": {"value": 2,"left": null, "right": {"value": 3,"left": null, "right": null}}, "right": {"value": 4,"left": {"value": 5,"left": null, "right": null}, "right": null}},
      "expectedOutput": [1, 2, 4, 3, 5]
    },
    {
      "input": null,
      "expectedOutput": []
    },
    {
      "input": {"value": 2,"left": {"value": 1,"left": null, "right": {"value": 0,"left": null, "right": null}}, "right": null},
      "expectedOutput": [2, 1, 0]
    },
    {
      "input": {"value": 15,"left": {"value": 15,"left": null, "right": null}, "right": null},
      "expectedOutput": [15, 15]
    }
  ]
}