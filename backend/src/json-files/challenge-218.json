{
  "description": "### Depth-First Search Component Size\n\nThe function `dfsComponentSize(matrix, vertex)` finds the number of nodes in a graph using Depth-first Search (DFS) traversal starting from a given vertex. The function takes as input a binary adjacency matrix representing the graph and an integer representing the starting vertex and returns the size of the component.\n\nInput: The function takes a list of lists where each sub-list includes boolean elements showing the connectivity between nodes and an integer which points to the start node.\nOutput: The function returns an integer which is the size of the component.\n\nExample:\n\n```js dfsComponentSize([[false,true,false,true], [true,false,false,false], [false,false,false,false], [true,false,false,false]], 1) // 3 ```",
  "tests": [
    {
      "input": [[[false,true,false], [true,false,false], [false,false,false]], 0],
      "expectedOutput": 2
    },
    {
      "input": [[[false,true,false,true], [true,false,false,false], [false,false,false,false], [true,false,false,false]], 1],
      "expectedOutput": 3
    },
    {
      "input": [[[false,false,false], [false,false,false], [false,false,false]], 0],
      "expectedOutput": 1
    },
    {
      "input": [[[false,true,false], [true,false,false], [false,false,false]], 2],
      "expectedOutput": 1
    },
    {
      "input": [[[false,true,false,true], [true,false,true,false], [false,true,false,true], [true,false,true,false]], 2],
      "expectedOutput": 4
    }
  ]
}