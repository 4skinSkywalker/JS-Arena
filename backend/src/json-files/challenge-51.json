{
  "description": "### Reverse Nodes In K Groups\n\nGiven a linked list l, reverse its nodes k at a time and return the modified list. k is a positive integer that is less than or equal to the length of l. If the number of nodes in the linked list is not a multiple of k, then the nodes that are left out at the end should remain as-is.\n\nInput: Given parameters are the root of the linked list l as ListNode<Integer> and an integer k.\nOutput: Should return a ListNode<Integer> which is the root of the modified list.\n\nExample:\n\n```js reverseNodesInKGroups(ListNode<Integer>{1,2,3,4,5}, 2) // ListNode<Integer>{2,1,4,3,5} ```",
  "tests": [
    {
      "input": {"l": [1, 2, 3, 4, 5], "k": 2},
      "expectedOutput": [2, 1, 4, 3, 5]
    },
    {
      "input": {"l": [1, 2, 3, 4, 5], "k": 1},
      "expectedOutput": [1, 2, 3, 4, 5]
    },
    {
      "input": {"l": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "k": 3},
      "expectedOutput": [3, 2, 1, 6, 5, 4, 9, 8, 7, 10, 11]
    },
    {
      "input": {"l": [239], "k": 1},
      "expectedOutput": [239]
    },
    {
      "input": {"l": [1, 2, 3, 4], "k": 2},
      "expectedOutput": [2, 1, 4, 3]
    },
    {
      "input": {"l": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "k": 3},
      "expectedOutput": [3, 2, 1, 6, 5, 4, 9, 8, 7, 12, 11, 10]
    },
    {
      "input": {"l": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "k": 4},
      "expectedOutput": [4, 3, 2, 1, 8, 7, 6, 5, 12, 11, 10, 9]
    },
    {
      "input": {"l": [1000000000, -849483855, -1000000000, 376365554, -847904832], "k": 4},
      "expectedOutput": [376365554, -1000000000, -849483855, 1000000000, -847904832]
    },
    {
      "input": {"l": [376365554, -340557143, -849483855, 810952169, -847904832], "k": 4},
      "expectedOutput": [810952169, -849483855, -340557143, 376365554, -847904832]
    },
    {
      "input": {"l": [810952169, -849483855, -340557143, 376365554, -847904832], "k": 2},
      "expectedOutput": [-849483855, 810952169, 376365554, -340557143, -847904832]
    }
  ]
}